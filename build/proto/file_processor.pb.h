// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/file_processor.proto
// Protobuf C++ Version: 6.31.1

#ifndef proto_2ffile_5fprocessor_2eproto_2epb_2eh
#define proto_2ffile_5fprocessor_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2ffile_5fprocessor_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2ffile_5fprocessor_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_proto_2ffile_5fprocessor_2eproto;
}  // extern "C"
namespace file_processor {
class CompressPDFRequest;
struct CompressPDFRequestDefaultTypeInternal;
extern CompressPDFRequestDefaultTypeInternal _CompressPDFRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CompressPDFRequest_class_data_;
class ConvertImageFormatRequest;
struct ConvertImageFormatRequestDefaultTypeInternal;
extern ConvertImageFormatRequestDefaultTypeInternal _ConvertImageFormatRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConvertImageFormatRequest_class_data_;
class ConvertToTXTRequest;
struct ConvertToTXTRequestDefaultTypeInternal;
extern ConvertToTXTRequestDefaultTypeInternal _ConvertToTXTRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConvertToTXTRequest_class_data_;
class FileChunk;
struct FileChunkDefaultTypeInternal;
extern FileChunkDefaultTypeInternal _FileChunk_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FileChunk_class_data_;
class FileRequest;
struct FileRequestDefaultTypeInternal;
extern FileRequestDefaultTypeInternal _FileRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FileRequest_class_data_;
class FileResponse;
struct FileResponseDefaultTypeInternal;
extern FileResponseDefaultTypeInternal _FileResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FileResponse_class_data_;
class ResizeImageRequest;
struct ResizeImageRequestDefaultTypeInternal;
extern ResizeImageRequestDefaultTypeInternal _ResizeImageRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResizeImageRequest_class_data_;
}  // namespace file_processor
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace file_processor {

// ===================================================================


// -------------------------------------------------------------------

class ResizeImageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:file_processor.ResizeImageRequest) */ {
 public:
  inline ResizeImageRequest() : ResizeImageRequest(nullptr) {}
  ~ResizeImageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResizeImageRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResizeImageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResizeImageRequest(::google::protobuf::internal::ConstantInitialized);

  inline ResizeImageRequest(const ResizeImageRequest& from) : ResizeImageRequest(nullptr, from) {}
  inline ResizeImageRequest(ResizeImageRequest&& from) noexcept
      : ResizeImageRequest(nullptr, ::std::move(from)) {}
  inline ResizeImageRequest& operator=(const ResizeImageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResizeImageRequest& operator=(ResizeImageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResizeImageRequest& default_instance() {
    return *reinterpret_cast<const ResizeImageRequest*>(
        &_ResizeImageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ResizeImageRequest& a, ResizeImageRequest& b) { a.Swap(&b); }
  inline void Swap(ResizeImageRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResizeImageRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResizeImageRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResizeImageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResizeImageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResizeImageRequest& from) { ResizeImageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResizeImageRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "file_processor.ResizeImageRequest"; }

 protected:
  explicit ResizeImageRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResizeImageRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResizeImageRequest& from);
  ResizeImageRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResizeImageRequest&& from) noexcept
      : ResizeImageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
  };
  // int32 width = 1;
  void clear_width() ;
  ::int32_t width() const;
  void set_width(::int32_t value);

  private:
  ::int32_t _internal_width() const;
  void _internal_set_width(::int32_t value);

  public:
  // int32 height = 2;
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:file_processor.ResizeImageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResizeImageRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t width_;
    ::int32_t height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2ffile_5fprocessor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResizeImageRequest_class_data_;
// -------------------------------------------------------------------

class FileChunk final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:file_processor.FileChunk) */ {
 public:
  inline FileChunk() : FileChunk(nullptr) {}
  ~FileChunk() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileChunk* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileChunk));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileChunk(::google::protobuf::internal::ConstantInitialized);

  inline FileChunk(const FileChunk& from) : FileChunk(nullptr, from) {}
  inline FileChunk(FileChunk&& from) noexcept
      : FileChunk(nullptr, ::std::move(from)) {}
  inline FileChunk& operator=(const FileChunk& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileChunk& operator=(FileChunk&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileChunk& default_instance() {
    return *reinterpret_cast<const FileChunk*>(
        &_FileChunk_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(FileChunk& a, FileChunk& b) { a.Swap(&b); }
  inline void Swap(FileChunk* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileChunk* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileChunk* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileChunk>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileChunk& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileChunk& from) { FileChunk::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileChunk* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "file_processor.FileChunk"; }

 protected:
  explicit FileChunk(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FileChunk(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FileChunk& from);
  FileChunk(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FileChunk&& from) noexcept
      : FileChunk(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentFieldNumber = 1,
  };
  // bytes content = 1;
  void clear_content() ;
  const ::std::string& content() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_content();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_content();
  void set_allocated_content(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_content() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_content(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:file_processor.FileChunk)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FileChunk& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2ffile_5fprocessor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FileChunk_class_data_;
// -------------------------------------------------------------------

class ConvertToTXTRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:file_processor.ConvertToTXTRequest) */ {
 public:
  inline ConvertToTXTRequest() : ConvertToTXTRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConvertToTXTRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConvertToTXTRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConvertToTXTRequest(::google::protobuf::internal::ConstantInitialized);

  inline ConvertToTXTRequest(const ConvertToTXTRequest& from) : ConvertToTXTRequest(nullptr, from) {}
  inline ConvertToTXTRequest(ConvertToTXTRequest&& from) noexcept
      : ConvertToTXTRequest(nullptr, ::std::move(from)) {}
  inline ConvertToTXTRequest& operator=(const ConvertToTXTRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvertToTXTRequest& operator=(ConvertToTXTRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConvertToTXTRequest& default_instance() {
    return *reinterpret_cast<const ConvertToTXTRequest*>(
        &_ConvertToTXTRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ConvertToTXTRequest& a, ConvertToTXTRequest& b) { a.Swap(&b); }
  inline void Swap(ConvertToTXTRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConvertToTXTRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConvertToTXTRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ConvertToTXTRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ConvertToTXTRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ConvertToTXTRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "file_processor.ConvertToTXTRequest"; }

 protected:
  explicit ConvertToTXTRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConvertToTXTRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConvertToTXTRequest& from);
  ConvertToTXTRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConvertToTXTRequest&& from) noexcept
      : ConvertToTXTRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:file_processor.ConvertToTXTRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConvertToTXTRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2ffile_5fprocessor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConvertToTXTRequest_class_data_;
// -------------------------------------------------------------------

class ConvertImageFormatRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:file_processor.ConvertImageFormatRequest) */ {
 public:
  inline ConvertImageFormatRequest() : ConvertImageFormatRequest(nullptr) {}
  ~ConvertImageFormatRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConvertImageFormatRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConvertImageFormatRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConvertImageFormatRequest(::google::protobuf::internal::ConstantInitialized);

  inline ConvertImageFormatRequest(const ConvertImageFormatRequest& from) : ConvertImageFormatRequest(nullptr, from) {}
  inline ConvertImageFormatRequest(ConvertImageFormatRequest&& from) noexcept
      : ConvertImageFormatRequest(nullptr, ::std::move(from)) {}
  inline ConvertImageFormatRequest& operator=(const ConvertImageFormatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvertImageFormatRequest& operator=(ConvertImageFormatRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConvertImageFormatRequest& default_instance() {
    return *reinterpret_cast<const ConvertImageFormatRequest*>(
        &_ConvertImageFormatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ConvertImageFormatRequest& a, ConvertImageFormatRequest& b) { a.Swap(&b); }
  inline void Swap(ConvertImageFormatRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConvertImageFormatRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConvertImageFormatRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConvertImageFormatRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConvertImageFormatRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConvertImageFormatRequest& from) { ConvertImageFormatRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConvertImageFormatRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "file_processor.ConvertImageFormatRequest"; }

 protected:
  explicit ConvertImageFormatRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConvertImageFormatRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConvertImageFormatRequest& from);
  ConvertImageFormatRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConvertImageFormatRequest&& from) noexcept
      : ConvertImageFormatRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputFormatFieldNumber = 1,
  };
  // string output_format = 1;
  void clear_output_format() ;
  const ::std::string& output_format() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_output_format(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_output_format();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_output_format();
  void set_allocated_output_format(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_output_format() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_output_format(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_output_format();

  public:
  // @@protoc_insertion_point(class_scope:file_processor.ConvertImageFormatRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConvertImageFormatRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr output_format_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2ffile_5fprocessor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConvertImageFormatRequest_class_data_;
// -------------------------------------------------------------------

class CompressPDFRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:file_processor.CompressPDFRequest) */ {
 public:
  inline CompressPDFRequest() : CompressPDFRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CompressPDFRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CompressPDFRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompressPDFRequest(::google::protobuf::internal::ConstantInitialized);

  inline CompressPDFRequest(const CompressPDFRequest& from) : CompressPDFRequest(nullptr, from) {}
  inline CompressPDFRequest(CompressPDFRequest&& from) noexcept
      : CompressPDFRequest(nullptr, ::std::move(from)) {}
  inline CompressPDFRequest& operator=(const CompressPDFRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompressPDFRequest& operator=(CompressPDFRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompressPDFRequest& default_instance() {
    return *reinterpret_cast<const CompressPDFRequest*>(
        &_CompressPDFRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CompressPDFRequest& a, CompressPDFRequest& b) { a.Swap(&b); }
  inline void Swap(CompressPDFRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompressPDFRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompressPDFRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CompressPDFRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CompressPDFRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CompressPDFRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "file_processor.CompressPDFRequest"; }

 protected:
  explicit CompressPDFRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CompressPDFRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CompressPDFRequest& from);
  CompressPDFRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CompressPDFRequest&& from) noexcept
      : CompressPDFRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:file_processor.CompressPDFRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CompressPDFRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2ffile_5fprocessor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CompressPDFRequest_class_data_;
// -------------------------------------------------------------------

class FileResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:file_processor.FileResponse) */ {
 public:
  inline FileResponse() : FileResponse(nullptr) {}
  ~FileResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileResponse(::google::protobuf::internal::ConstantInitialized);

  inline FileResponse(const FileResponse& from) : FileResponse(nullptr, from) {}
  inline FileResponse(FileResponse&& from) noexcept
      : FileResponse(nullptr, ::std::move(from)) {}
  inline FileResponse& operator=(const FileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileResponse& operator=(FileResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileResponse& default_instance() {
    return *reinterpret_cast<const FileResponse*>(
        &_FileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(FileResponse& a, FileResponse& b) { a.Swap(&b); }
  inline void Swap(FileResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileResponse& from) { FileResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "file_processor.FileResponse"; }

 protected:
  explicit FileResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FileResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FileResponse& from);
  FileResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FileResponse&& from) noexcept
      : FileResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNameFieldNumber = 1,
    kStatusMessageFieldNumber = 3,
    kFileContentFieldNumber = 2,
    kSuccessFieldNumber = 4,
  };
  // string file_name = 1;
  void clear_file_name() ;
  const ::std::string& file_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_file_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_file_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_file_name();
  void set_allocated_file_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_file_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_file_name();

  public:
  // string status_message = 3;
  void clear_status_message() ;
  const ::std::string& status_message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_status_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_status_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_status_message();
  void set_allocated_status_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_status_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_status_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_status_message();

  public:
  // .file_processor.FileChunk file_content = 2;
  bool has_file_content() const;
  void clear_file_content() ;
  const ::file_processor::FileChunk& file_content() const;
  [[nodiscard]] ::file_processor::FileChunk* PROTOBUF_NULLABLE release_file_content();
  ::file_processor::FileChunk* PROTOBUF_NONNULL mutable_file_content();
  void set_allocated_file_content(::file_processor::FileChunk* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_file_content(::file_processor::FileChunk* PROTOBUF_NULLABLE value);
  ::file_processor::FileChunk* PROTOBUF_NULLABLE unsafe_arena_release_file_content();

  private:
  const ::file_processor::FileChunk& _internal_file_content() const;
  ::file_processor::FileChunk* PROTOBUF_NONNULL _internal_mutable_file_content();

  public:
  // bool success = 4;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:file_processor.FileResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 59,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FileResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr file_name_;
    ::google::protobuf::internal::ArenaStringPtr status_message_;
    ::file_processor::FileChunk* PROTOBUF_NULLABLE file_content_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2ffile_5fprocessor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FileResponse_class_data_;
// -------------------------------------------------------------------

class FileRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:file_processor.FileRequest) */ {
 public:
  inline FileRequest() : FileRequest(nullptr) {}
  ~FileRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileRequest(::google::protobuf::internal::ConstantInitialized);

  inline FileRequest(const FileRequest& from) : FileRequest(nullptr, from) {}
  inline FileRequest(FileRequest&& from) noexcept
      : FileRequest(nullptr, ::std::move(from)) {}
  inline FileRequest& operator=(const FileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileRequest& operator=(FileRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileRequest& default_instance() {
    return *reinterpret_cast<const FileRequest*>(
        &_FileRequest_default_instance_);
  }
  enum ParametersCase {
    kCompressPdfParams = 3,
    kConvertToTxtParams = 4,
    kConvertImageFormatParams = 5,
    kResizeImageParams = 6,
    PARAMETERS_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FileRequest& a, FileRequest& b) { a.Swap(&b); }
  inline void Swap(FileRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileRequest& from) { FileRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "file_processor.FileRequest"; }

 protected:
  explicit FileRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FileRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FileRequest& from);
  FileRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FileRequest&& from) noexcept
      : FileRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileNameFieldNumber = 1,
    kFileContentFieldNumber = 2,
    kCompressPdfParamsFieldNumber = 3,
    kConvertToTxtParamsFieldNumber = 4,
    kConvertImageFormatParamsFieldNumber = 5,
    kResizeImageParamsFieldNumber = 6,
  };
  // string file_name = 1;
  void clear_file_name() ;
  const ::std::string& file_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_file_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_file_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_file_name();
  void set_allocated_file_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_file_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_file_name();

  public:
  // .file_processor.FileChunk file_content = 2;
  bool has_file_content() const;
  void clear_file_content() ;
  const ::file_processor::FileChunk& file_content() const;
  [[nodiscard]] ::file_processor::FileChunk* PROTOBUF_NULLABLE release_file_content();
  ::file_processor::FileChunk* PROTOBUF_NONNULL mutable_file_content();
  void set_allocated_file_content(::file_processor::FileChunk* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_file_content(::file_processor::FileChunk* PROTOBUF_NULLABLE value);
  ::file_processor::FileChunk* PROTOBUF_NULLABLE unsafe_arena_release_file_content();

  private:
  const ::file_processor::FileChunk& _internal_file_content() const;
  ::file_processor::FileChunk* PROTOBUF_NONNULL _internal_mutable_file_content();

  public:
  // .file_processor.CompressPDFRequest compress_pdf_params = 3;
  bool has_compress_pdf_params() const;
  private:
  bool _internal_has_compress_pdf_params() const;

  public:
  void clear_compress_pdf_params() ;
  const ::file_processor::CompressPDFRequest& compress_pdf_params() const;
  [[nodiscard]] ::file_processor::CompressPDFRequest* PROTOBUF_NULLABLE release_compress_pdf_params();
  ::file_processor::CompressPDFRequest* PROTOBUF_NONNULL mutable_compress_pdf_params();
  void set_allocated_compress_pdf_params(::file_processor::CompressPDFRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_compress_pdf_params(::file_processor::CompressPDFRequest* PROTOBUF_NULLABLE value);
  ::file_processor::CompressPDFRequest* PROTOBUF_NULLABLE unsafe_arena_release_compress_pdf_params();

  private:
  const ::file_processor::CompressPDFRequest& _internal_compress_pdf_params() const;
  ::file_processor::CompressPDFRequest* PROTOBUF_NONNULL _internal_mutable_compress_pdf_params();

  public:
  // .file_processor.ConvertToTXTRequest convert_to_txt_params = 4;
  bool has_convert_to_txt_params() const;
  private:
  bool _internal_has_convert_to_txt_params() const;

  public:
  void clear_convert_to_txt_params() ;
  const ::file_processor::ConvertToTXTRequest& convert_to_txt_params() const;
  [[nodiscard]] ::file_processor::ConvertToTXTRequest* PROTOBUF_NULLABLE release_convert_to_txt_params();
  ::file_processor::ConvertToTXTRequest* PROTOBUF_NONNULL mutable_convert_to_txt_params();
  void set_allocated_convert_to_txt_params(::file_processor::ConvertToTXTRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_convert_to_txt_params(::file_processor::ConvertToTXTRequest* PROTOBUF_NULLABLE value);
  ::file_processor::ConvertToTXTRequest* PROTOBUF_NULLABLE unsafe_arena_release_convert_to_txt_params();

  private:
  const ::file_processor::ConvertToTXTRequest& _internal_convert_to_txt_params() const;
  ::file_processor::ConvertToTXTRequest* PROTOBUF_NONNULL _internal_mutable_convert_to_txt_params();

  public:
  // .file_processor.ConvertImageFormatRequest convert_image_format_params = 5;
  bool has_convert_image_format_params() const;
  private:
  bool _internal_has_convert_image_format_params() const;

  public:
  void clear_convert_image_format_params() ;
  const ::file_processor::ConvertImageFormatRequest& convert_image_format_params() const;
  [[nodiscard]] ::file_processor::ConvertImageFormatRequest* PROTOBUF_NULLABLE release_convert_image_format_params();
  ::file_processor::ConvertImageFormatRequest* PROTOBUF_NONNULL mutable_convert_image_format_params();
  void set_allocated_convert_image_format_params(::file_processor::ConvertImageFormatRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_convert_image_format_params(::file_processor::ConvertImageFormatRequest* PROTOBUF_NULLABLE value);
  ::file_processor::ConvertImageFormatRequest* PROTOBUF_NULLABLE unsafe_arena_release_convert_image_format_params();

  private:
  const ::file_processor::ConvertImageFormatRequest& _internal_convert_image_format_params() const;
  ::file_processor::ConvertImageFormatRequest* PROTOBUF_NONNULL _internal_mutable_convert_image_format_params();

  public:
  // .file_processor.ResizeImageRequest resize_image_params = 6;
  bool has_resize_image_params() const;
  private:
  bool _internal_has_resize_image_params() const;

  public:
  void clear_resize_image_params() ;
  const ::file_processor::ResizeImageRequest& resize_image_params() const;
  [[nodiscard]] ::file_processor::ResizeImageRequest* PROTOBUF_NULLABLE release_resize_image_params();
  ::file_processor::ResizeImageRequest* PROTOBUF_NONNULL mutable_resize_image_params();
  void set_allocated_resize_image_params(::file_processor::ResizeImageRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_resize_image_params(::file_processor::ResizeImageRequest* PROTOBUF_NULLABLE value);
  ::file_processor::ResizeImageRequest* PROTOBUF_NULLABLE unsafe_arena_release_resize_image_params();

  private:
  const ::file_processor::ResizeImageRequest& _internal_resize_image_params() const;
  ::file_processor::ResizeImageRequest* PROTOBUF_NONNULL _internal_mutable_resize_image_params();

  public:
  void clear_parameters();
  ParametersCase parameters_case() const;
  // @@protoc_insertion_point(class_scope:file_processor.FileRequest)
 private:
  class _Internal;
  void set_has_compress_pdf_params();
  void set_has_convert_to_txt_params();
  void set_has_convert_image_format_params();
  void set_has_resize_image_params();
  inline bool has_parameters() const;
  inline void clear_has_parameters();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 6,
                                   5, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FileRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr file_name_;
    ::file_processor::FileChunk* PROTOBUF_NULLABLE file_content_;
    union ParametersUnion {
      constexpr ParametersUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE compress_pdf_params_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE convert_to_txt_params_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE convert_image_format_params_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE resize_image_params_;
    } parameters_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2ffile_5fprocessor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FileRequest_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FileChunk

// bytes content = 1;
inline void FileChunk::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FileChunk::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileChunk.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileChunk::set_content(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:file_processor.FileChunk.content)
}
inline ::std::string* PROTOBUF_NONNULL FileChunk::mutable_content()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:file_processor.FileChunk.content)
  return _s;
}
inline const ::std::string& FileChunk::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void FileChunk::_internal_set_content(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.content_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileChunk::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.content_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileChunk::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:file_processor.FileChunk.content)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.content_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.content_.Set("", GetArena());
  }
  return released;
}
inline void FileChunk::set_allocated_content(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:file_processor.FileChunk.content)
}

// -------------------------------------------------------------------

// FileRequest

// string file_name = 1;
inline void FileRequest::clear_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FileRequest::file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileRequest.file_name)
  return _internal_file_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileRequest::set_file_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:file_processor.FileRequest.file_name)
}
inline ::std::string* PROTOBUF_NONNULL FileRequest::mutable_file_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:file_processor.FileRequest.file_name)
  return _s;
}
inline const ::std::string& FileRequest::_internal_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_name_.Get();
}
inline void FileRequest::_internal_set_file_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileRequest::_internal_mutable_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.file_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileRequest::release_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:file_processor.FileRequest.file_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.file_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_name_.Set("", GetArena());
  }
  return released;
}
inline void FileRequest::set_allocated_file_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.file_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:file_processor.FileRequest.file_name)
}

// .file_processor.FileChunk file_content = 2;
inline bool FileRequest::has_file_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.file_content_ != nullptr);
  return value;
}
inline void FileRequest::clear_file_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_content_ != nullptr) _impl_.file_content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::file_processor::FileChunk& FileRequest::_internal_file_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::file_processor::FileChunk* p = _impl_.file_content_;
  return p != nullptr ? *p : reinterpret_cast<const ::file_processor::FileChunk&>(::file_processor::_FileChunk_default_instance_);
}
inline const ::file_processor::FileChunk& FileRequest::file_content() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileRequest.file_content)
  return _internal_file_content();
}
inline void FileRequest::unsafe_arena_set_allocated_file_content(
    ::file_processor::FileChunk* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.file_content_);
  }
  _impl_.file_content_ = reinterpret_cast<::file_processor::FileChunk*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:file_processor.FileRequest.file_content)
}
inline ::file_processor::FileChunk* PROTOBUF_NULLABLE FileRequest::release_file_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::file_processor::FileChunk* released = _impl_.file_content_;
  _impl_.file_content_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::file_processor::FileChunk* PROTOBUF_NULLABLE FileRequest::unsafe_arena_release_file_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:file_processor.FileRequest.file_content)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::file_processor::FileChunk* temp = _impl_.file_content_;
  _impl_.file_content_ = nullptr;
  return temp;
}
inline ::file_processor::FileChunk* PROTOBUF_NONNULL FileRequest::_internal_mutable_file_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_content_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::file_processor::FileChunk>(GetArena());
    _impl_.file_content_ = reinterpret_cast<::file_processor::FileChunk*>(p);
  }
  return _impl_.file_content_;
}
inline ::file_processor::FileChunk* PROTOBUF_NONNULL FileRequest::mutable_file_content()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::file_processor::FileChunk* _msg = _internal_mutable_file_content();
  // @@protoc_insertion_point(field_mutable:file_processor.FileRequest.file_content)
  return _msg;
}
inline void FileRequest::set_allocated_file_content(::file_processor::FileChunk* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.file_content_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.file_content_ = reinterpret_cast<::file_processor::FileChunk*>(value);
  // @@protoc_insertion_point(field_set_allocated:file_processor.FileRequest.file_content)
}

// .file_processor.CompressPDFRequest compress_pdf_params = 3;
inline bool FileRequest::has_compress_pdf_params() const {
  return parameters_case() == kCompressPdfParams;
}
inline bool FileRequest::_internal_has_compress_pdf_params() const {
  return parameters_case() == kCompressPdfParams;
}
inline void FileRequest::set_has_compress_pdf_params() {
  _impl_._oneof_case_[0] = kCompressPdfParams;
}
inline void FileRequest::clear_compress_pdf_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (parameters_case() == kCompressPdfParams) {
    if (GetArena() == nullptr) {
      delete _impl_.parameters_.compress_pdf_params_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.parameters_.compress_pdf_params_);
    }
    clear_has_parameters();
  }
}
inline ::file_processor::CompressPDFRequest* PROTOBUF_NULLABLE FileRequest::release_compress_pdf_params() {
  // @@protoc_insertion_point(field_release:file_processor.FileRequest.compress_pdf_params)
  if (parameters_case() == kCompressPdfParams) {
    clear_has_parameters();
    auto* temp = reinterpret_cast<::file_processor::CompressPDFRequest*>(_impl_.parameters_.compress_pdf_params_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.parameters_.compress_pdf_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::file_processor::CompressPDFRequest& FileRequest::_internal_compress_pdf_params() const {
  return parameters_case() == kCompressPdfParams ? *reinterpret_cast<::file_processor::CompressPDFRequest*>(_impl_.parameters_.compress_pdf_params_) : reinterpret_cast<::file_processor::CompressPDFRequest&>(::file_processor::_CompressPDFRequest_default_instance_);
}
inline const ::file_processor::CompressPDFRequest& FileRequest::compress_pdf_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileRequest.compress_pdf_params)
  return _internal_compress_pdf_params();
}
inline ::file_processor::CompressPDFRequest* PROTOBUF_NULLABLE FileRequest::unsafe_arena_release_compress_pdf_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:file_processor.FileRequest.compress_pdf_params)
  if (parameters_case() == kCompressPdfParams) {
    clear_has_parameters();
    auto* temp = reinterpret_cast<::file_processor::CompressPDFRequest*>(_impl_.parameters_.compress_pdf_params_);
    _impl_.parameters_.compress_pdf_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FileRequest::unsafe_arena_set_allocated_compress_pdf_params(
    ::file_processor::CompressPDFRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_parameters();
  if (value) {
    set_has_compress_pdf_params();
    _impl_.parameters_.compress_pdf_params_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:file_processor.FileRequest.compress_pdf_params)
}
inline ::file_processor::CompressPDFRequest* PROTOBUF_NONNULL FileRequest::_internal_mutable_compress_pdf_params() {
  if (parameters_case() != kCompressPdfParams) {
    clear_parameters();
    set_has_compress_pdf_params();
    _impl_.parameters_.compress_pdf_params_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::file_processor::CompressPDFRequest>(GetArena()));
  }
  return reinterpret_cast<::file_processor::CompressPDFRequest*>(_impl_.parameters_.compress_pdf_params_);
}
inline ::file_processor::CompressPDFRequest* PROTOBUF_NONNULL FileRequest::mutable_compress_pdf_params()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::file_processor::CompressPDFRequest* _msg = _internal_mutable_compress_pdf_params();
  // @@protoc_insertion_point(field_mutable:file_processor.FileRequest.compress_pdf_params)
  return _msg;
}

// .file_processor.ConvertToTXTRequest convert_to_txt_params = 4;
inline bool FileRequest::has_convert_to_txt_params() const {
  return parameters_case() == kConvertToTxtParams;
}
inline bool FileRequest::_internal_has_convert_to_txt_params() const {
  return parameters_case() == kConvertToTxtParams;
}
inline void FileRequest::set_has_convert_to_txt_params() {
  _impl_._oneof_case_[0] = kConvertToTxtParams;
}
inline void FileRequest::clear_convert_to_txt_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (parameters_case() == kConvertToTxtParams) {
    if (GetArena() == nullptr) {
      delete _impl_.parameters_.convert_to_txt_params_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.parameters_.convert_to_txt_params_);
    }
    clear_has_parameters();
  }
}
inline ::file_processor::ConvertToTXTRequest* PROTOBUF_NULLABLE FileRequest::release_convert_to_txt_params() {
  // @@protoc_insertion_point(field_release:file_processor.FileRequest.convert_to_txt_params)
  if (parameters_case() == kConvertToTxtParams) {
    clear_has_parameters();
    auto* temp = reinterpret_cast<::file_processor::ConvertToTXTRequest*>(_impl_.parameters_.convert_to_txt_params_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.parameters_.convert_to_txt_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::file_processor::ConvertToTXTRequest& FileRequest::_internal_convert_to_txt_params() const {
  return parameters_case() == kConvertToTxtParams ? *reinterpret_cast<::file_processor::ConvertToTXTRequest*>(_impl_.parameters_.convert_to_txt_params_) : reinterpret_cast<::file_processor::ConvertToTXTRequest&>(::file_processor::_ConvertToTXTRequest_default_instance_);
}
inline const ::file_processor::ConvertToTXTRequest& FileRequest::convert_to_txt_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileRequest.convert_to_txt_params)
  return _internal_convert_to_txt_params();
}
inline ::file_processor::ConvertToTXTRequest* PROTOBUF_NULLABLE FileRequest::unsafe_arena_release_convert_to_txt_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:file_processor.FileRequest.convert_to_txt_params)
  if (parameters_case() == kConvertToTxtParams) {
    clear_has_parameters();
    auto* temp = reinterpret_cast<::file_processor::ConvertToTXTRequest*>(_impl_.parameters_.convert_to_txt_params_);
    _impl_.parameters_.convert_to_txt_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FileRequest::unsafe_arena_set_allocated_convert_to_txt_params(
    ::file_processor::ConvertToTXTRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_parameters();
  if (value) {
    set_has_convert_to_txt_params();
    _impl_.parameters_.convert_to_txt_params_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:file_processor.FileRequest.convert_to_txt_params)
}
inline ::file_processor::ConvertToTXTRequest* PROTOBUF_NONNULL FileRequest::_internal_mutable_convert_to_txt_params() {
  if (parameters_case() != kConvertToTxtParams) {
    clear_parameters();
    set_has_convert_to_txt_params();
    _impl_.parameters_.convert_to_txt_params_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::file_processor::ConvertToTXTRequest>(GetArena()));
  }
  return reinterpret_cast<::file_processor::ConvertToTXTRequest*>(_impl_.parameters_.convert_to_txt_params_);
}
inline ::file_processor::ConvertToTXTRequest* PROTOBUF_NONNULL FileRequest::mutable_convert_to_txt_params()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::file_processor::ConvertToTXTRequest* _msg = _internal_mutable_convert_to_txt_params();
  // @@protoc_insertion_point(field_mutable:file_processor.FileRequest.convert_to_txt_params)
  return _msg;
}

// .file_processor.ConvertImageFormatRequest convert_image_format_params = 5;
inline bool FileRequest::has_convert_image_format_params() const {
  return parameters_case() == kConvertImageFormatParams;
}
inline bool FileRequest::_internal_has_convert_image_format_params() const {
  return parameters_case() == kConvertImageFormatParams;
}
inline void FileRequest::set_has_convert_image_format_params() {
  _impl_._oneof_case_[0] = kConvertImageFormatParams;
}
inline void FileRequest::clear_convert_image_format_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (parameters_case() == kConvertImageFormatParams) {
    if (GetArena() == nullptr) {
      delete _impl_.parameters_.convert_image_format_params_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.parameters_.convert_image_format_params_);
    }
    clear_has_parameters();
  }
}
inline ::file_processor::ConvertImageFormatRequest* PROTOBUF_NULLABLE FileRequest::release_convert_image_format_params() {
  // @@protoc_insertion_point(field_release:file_processor.FileRequest.convert_image_format_params)
  if (parameters_case() == kConvertImageFormatParams) {
    clear_has_parameters();
    auto* temp = reinterpret_cast<::file_processor::ConvertImageFormatRequest*>(_impl_.parameters_.convert_image_format_params_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.parameters_.convert_image_format_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::file_processor::ConvertImageFormatRequest& FileRequest::_internal_convert_image_format_params() const {
  return parameters_case() == kConvertImageFormatParams ? *reinterpret_cast<::file_processor::ConvertImageFormatRequest*>(_impl_.parameters_.convert_image_format_params_) : reinterpret_cast<::file_processor::ConvertImageFormatRequest&>(::file_processor::_ConvertImageFormatRequest_default_instance_);
}
inline const ::file_processor::ConvertImageFormatRequest& FileRequest::convert_image_format_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileRequest.convert_image_format_params)
  return _internal_convert_image_format_params();
}
inline ::file_processor::ConvertImageFormatRequest* PROTOBUF_NULLABLE FileRequest::unsafe_arena_release_convert_image_format_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:file_processor.FileRequest.convert_image_format_params)
  if (parameters_case() == kConvertImageFormatParams) {
    clear_has_parameters();
    auto* temp = reinterpret_cast<::file_processor::ConvertImageFormatRequest*>(_impl_.parameters_.convert_image_format_params_);
    _impl_.parameters_.convert_image_format_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FileRequest::unsafe_arena_set_allocated_convert_image_format_params(
    ::file_processor::ConvertImageFormatRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_parameters();
  if (value) {
    set_has_convert_image_format_params();
    _impl_.parameters_.convert_image_format_params_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:file_processor.FileRequest.convert_image_format_params)
}
inline ::file_processor::ConvertImageFormatRequest* PROTOBUF_NONNULL FileRequest::_internal_mutable_convert_image_format_params() {
  if (parameters_case() != kConvertImageFormatParams) {
    clear_parameters();
    set_has_convert_image_format_params();
    _impl_.parameters_.convert_image_format_params_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::file_processor::ConvertImageFormatRequest>(GetArena()));
  }
  return reinterpret_cast<::file_processor::ConvertImageFormatRequest*>(_impl_.parameters_.convert_image_format_params_);
}
inline ::file_processor::ConvertImageFormatRequest* PROTOBUF_NONNULL FileRequest::mutable_convert_image_format_params()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::file_processor::ConvertImageFormatRequest* _msg = _internal_mutable_convert_image_format_params();
  // @@protoc_insertion_point(field_mutable:file_processor.FileRequest.convert_image_format_params)
  return _msg;
}

// .file_processor.ResizeImageRequest resize_image_params = 6;
inline bool FileRequest::has_resize_image_params() const {
  return parameters_case() == kResizeImageParams;
}
inline bool FileRequest::_internal_has_resize_image_params() const {
  return parameters_case() == kResizeImageParams;
}
inline void FileRequest::set_has_resize_image_params() {
  _impl_._oneof_case_[0] = kResizeImageParams;
}
inline void FileRequest::clear_resize_image_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (parameters_case() == kResizeImageParams) {
    if (GetArena() == nullptr) {
      delete _impl_.parameters_.resize_image_params_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.parameters_.resize_image_params_);
    }
    clear_has_parameters();
  }
}
inline ::file_processor::ResizeImageRequest* PROTOBUF_NULLABLE FileRequest::release_resize_image_params() {
  // @@protoc_insertion_point(field_release:file_processor.FileRequest.resize_image_params)
  if (parameters_case() == kResizeImageParams) {
    clear_has_parameters();
    auto* temp = reinterpret_cast<::file_processor::ResizeImageRequest*>(_impl_.parameters_.resize_image_params_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.parameters_.resize_image_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::file_processor::ResizeImageRequest& FileRequest::_internal_resize_image_params() const {
  return parameters_case() == kResizeImageParams ? *reinterpret_cast<::file_processor::ResizeImageRequest*>(_impl_.parameters_.resize_image_params_) : reinterpret_cast<::file_processor::ResizeImageRequest&>(::file_processor::_ResizeImageRequest_default_instance_);
}
inline const ::file_processor::ResizeImageRequest& FileRequest::resize_image_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileRequest.resize_image_params)
  return _internal_resize_image_params();
}
inline ::file_processor::ResizeImageRequest* PROTOBUF_NULLABLE FileRequest::unsafe_arena_release_resize_image_params() {
  // @@protoc_insertion_point(field_unsafe_arena_release:file_processor.FileRequest.resize_image_params)
  if (parameters_case() == kResizeImageParams) {
    clear_has_parameters();
    auto* temp = reinterpret_cast<::file_processor::ResizeImageRequest*>(_impl_.parameters_.resize_image_params_);
    _impl_.parameters_.resize_image_params_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FileRequest::unsafe_arena_set_allocated_resize_image_params(
    ::file_processor::ResizeImageRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_parameters();
  if (value) {
    set_has_resize_image_params();
    _impl_.parameters_.resize_image_params_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:file_processor.FileRequest.resize_image_params)
}
inline ::file_processor::ResizeImageRequest* PROTOBUF_NONNULL FileRequest::_internal_mutable_resize_image_params() {
  if (parameters_case() != kResizeImageParams) {
    clear_parameters();
    set_has_resize_image_params();
    _impl_.parameters_.resize_image_params_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::file_processor::ResizeImageRequest>(GetArena()));
  }
  return reinterpret_cast<::file_processor::ResizeImageRequest*>(_impl_.parameters_.resize_image_params_);
}
inline ::file_processor::ResizeImageRequest* PROTOBUF_NONNULL FileRequest::mutable_resize_image_params()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::file_processor::ResizeImageRequest* _msg = _internal_mutable_resize_image_params();
  // @@protoc_insertion_point(field_mutable:file_processor.FileRequest.resize_image_params)
  return _msg;
}

inline bool FileRequest::has_parameters() const {
  return parameters_case() != PARAMETERS_NOT_SET;
}
inline void FileRequest::clear_has_parameters() {
  _impl_._oneof_case_[0] = PARAMETERS_NOT_SET;
}
inline FileRequest::ParametersCase FileRequest::parameters_case() const {
  return FileRequest::ParametersCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// CompressPDFRequest

// -------------------------------------------------------------------

// ConvertToTXTRequest

// -------------------------------------------------------------------

// ConvertImageFormatRequest

// string output_format = 1;
inline void ConvertImageFormatRequest::clear_output_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_format_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ConvertImageFormatRequest::output_format() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.ConvertImageFormatRequest.output_format)
  return _internal_output_format();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConvertImageFormatRequest::set_output_format(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.output_format_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:file_processor.ConvertImageFormatRequest.output_format)
}
inline ::std::string* PROTOBUF_NONNULL ConvertImageFormatRequest::mutable_output_format()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_output_format();
  // @@protoc_insertion_point(field_mutable:file_processor.ConvertImageFormatRequest.output_format)
  return _s;
}
inline const ::std::string& ConvertImageFormatRequest::_internal_output_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_format_.Get();
}
inline void ConvertImageFormatRequest::_internal_set_output_format(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.output_format_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConvertImageFormatRequest::_internal_mutable_output_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.output_format_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConvertImageFormatRequest::release_output_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:file_processor.ConvertImageFormatRequest.output_format)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.output_format_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.output_format_.Set("", GetArena());
  }
  return released;
}
inline void ConvertImageFormatRequest::set_allocated_output_format(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.output_format_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.output_format_.IsDefault()) {
    _impl_.output_format_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:file_processor.ConvertImageFormatRequest.output_format)
}

// -------------------------------------------------------------------

// ResizeImageRequest

// int32 width = 1;
inline void ResizeImageRequest::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t ResizeImageRequest::width() const {
  // @@protoc_insertion_point(field_get:file_processor.ResizeImageRequest.width)
  return _internal_width();
}
inline void ResizeImageRequest::set_width(::int32_t value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:file_processor.ResizeImageRequest.width)
}
inline ::int32_t ResizeImageRequest::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void ResizeImageRequest::_internal_set_width(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// int32 height = 2;
inline void ResizeImageRequest::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t ResizeImageRequest::height() const {
  // @@protoc_insertion_point(field_get:file_processor.ResizeImageRequest.height)
  return _internal_height();
}
inline void ResizeImageRequest::set_height(::int32_t value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:file_processor.ResizeImageRequest.height)
}
inline ::int32_t ResizeImageRequest::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void ResizeImageRequest::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// FileResponse

// string file_name = 1;
inline void FileResponse::clear_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FileResponse::file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileResponse.file_name)
  return _internal_file_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileResponse::set_file_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:file_processor.FileResponse.file_name)
}
inline ::std::string* PROTOBUF_NONNULL FileResponse::mutable_file_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:file_processor.FileResponse.file_name)
  return _s;
}
inline const ::std::string& FileResponse::_internal_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_name_.Get();
}
inline void FileResponse::_internal_set_file_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileResponse::_internal_mutable_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.file_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileResponse::release_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:file_processor.FileResponse.file_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.file_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_name_.Set("", GetArena());
  }
  return released;
}
inline void FileResponse::set_allocated_file_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.file_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:file_processor.FileResponse.file_name)
}

// .file_processor.FileChunk file_content = 2;
inline bool FileResponse::has_file_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.file_content_ != nullptr);
  return value;
}
inline void FileResponse::clear_file_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_content_ != nullptr) _impl_.file_content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::file_processor::FileChunk& FileResponse::_internal_file_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::file_processor::FileChunk* p = _impl_.file_content_;
  return p != nullptr ? *p : reinterpret_cast<const ::file_processor::FileChunk&>(::file_processor::_FileChunk_default_instance_);
}
inline const ::file_processor::FileChunk& FileResponse::file_content() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileResponse.file_content)
  return _internal_file_content();
}
inline void FileResponse::unsafe_arena_set_allocated_file_content(
    ::file_processor::FileChunk* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.file_content_);
  }
  _impl_.file_content_ = reinterpret_cast<::file_processor::FileChunk*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:file_processor.FileResponse.file_content)
}
inline ::file_processor::FileChunk* PROTOBUF_NULLABLE FileResponse::release_file_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::file_processor::FileChunk* released = _impl_.file_content_;
  _impl_.file_content_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::file_processor::FileChunk* PROTOBUF_NULLABLE FileResponse::unsafe_arena_release_file_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:file_processor.FileResponse.file_content)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::file_processor::FileChunk* temp = _impl_.file_content_;
  _impl_.file_content_ = nullptr;
  return temp;
}
inline ::file_processor::FileChunk* PROTOBUF_NONNULL FileResponse::_internal_mutable_file_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_content_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::file_processor::FileChunk>(GetArena());
    _impl_.file_content_ = reinterpret_cast<::file_processor::FileChunk*>(p);
  }
  return _impl_.file_content_;
}
inline ::file_processor::FileChunk* PROTOBUF_NONNULL FileResponse::mutable_file_content()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::file_processor::FileChunk* _msg = _internal_mutable_file_content();
  // @@protoc_insertion_point(field_mutable:file_processor.FileResponse.file_content)
  return _msg;
}
inline void FileResponse::set_allocated_file_content(::file_processor::FileChunk* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.file_content_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.file_content_ = reinterpret_cast<::file_processor::FileChunk*>(value);
  // @@protoc_insertion_point(field_set_allocated:file_processor.FileResponse.file_content)
}

// string status_message = 3;
inline void FileResponse::clear_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& FileResponse::status_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:file_processor.FileResponse.status_message)
  return _internal_status_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileResponse::set_status_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.status_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:file_processor.FileResponse.status_message)
}
inline ::std::string* PROTOBUF_NONNULL FileResponse::mutable_status_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_status_message();
  // @@protoc_insertion_point(field_mutable:file_processor.FileResponse.status_message)
  return _s;
}
inline const ::std::string& FileResponse::_internal_status_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_message_.Get();
}
inline void FileResponse::_internal_set_status_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.status_message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileResponse::_internal_mutable_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.status_message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileResponse::release_status_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:file_processor.FileResponse.status_message)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.status_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.status_message_.Set("", GetArena());
  }
  return released;
}
inline void FileResponse::set_allocated_status_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.status_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_message_.IsDefault()) {
    _impl_.status_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:file_processor.FileResponse.status_message)
}

// bool success = 4;
inline void FileResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool FileResponse::success() const {
  // @@protoc_insertion_point(field_get:file_processor.FileResponse.success)
  return _internal_success();
}
inline void FileResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:file_processor.FileResponse.success)
}
inline bool FileResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void FileResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace file_processor


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2ffile_5fprocessor_2eproto_2epb_2eh
